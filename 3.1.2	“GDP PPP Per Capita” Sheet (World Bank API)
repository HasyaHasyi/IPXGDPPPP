let
    // Step 1: Retrieve GNI per capita data from World Bank API
    FirstPageGNI = Json.Document(Web.Contents(
        "https://api.worldbank.org/v2/country/all/indicator/NY.GNP.PCAP.CD", 
        [Query = [format = "json", per_page = "1000", page = "1"]]
    )),
    GniPageCount = FirstPageGNI{0}[pages],
    GniPageNumbers = List.Numbers(1, GniPageCount),

    // Function to retrieve each page of GNI data
    GetGniPage = (page) =>
        let
            Raw = Json.Document(Web.Contents(
                "https://api.worldbank.org/v2/country/all/indicator/NY.GNP.PCAP.CD", 
                [Query = [format = "json", per_page = "1000", page = Text.From(page)]]
            )),
            Data = Raw{1}
        in
            Data,

    // Combine all pages of GNI data into one list
    AllGniPages = List.Combine(List.Transform(GniPageNumbers, each GetGniPage(_))),
    GniTableRaw = Table.FromList(AllGniPages, Splitter.SplitByNothing(), null, null, ExtraValues.Error),
    GniExpanded = Table.ExpandRecordColumn(GniTableRaw, "Column1", {
        "country", "countryiso3code", "date", "value"
    }),
    GniExpandedCountry = Table.ExpandRecordColumn(GniExpanded, "country", {"id", "value"}, {"Country ID", "Country Name"}),

    // Step 2: Clean and filter GNI data
    GniCleaned = Table.RenameColumns(GniExpandedCountry, {
        {"countryiso3code", "Country ISO Code"},
        {"date", "Year"},
        {"value", "GNI per Capita"}
    }),
    GniFiltered = Table.SelectRows(GniCleaned, each [Year] >= "2020"),
    GniTyped = Table.TransformColumnTypes(GniFiltered, {
        {"GNI per Capita", type number},
        {"Year", Int64.Type},
        {"Country ISO Code", type text}
    }),

    // Step 3: Retrieve GDP PPP per capita data from World Bank API
    FirstPageResponse = Json.Document(Web.Contents(
        "https://api.worldbank.org/v2/country/all/indicator/NY.GDP.PCAP.PP.CD", 
        [Query = [format = "json", per_page = "1000", page = "1"]]
    )),
    PageCount = FirstPageResponse{0}[pages],

    // Generate a list of page numbers for pagination
    PageNumbers = List.Numbers(1, PageCount),

    // Function to retrieve each page of GDP data
    GetPage = (page) =>
        let
            Raw = Json.Document(Web.Contents(
                "https://api.worldbank.org/v2/country/all/indicator/NY.GDP.PCAP.PP.CD", 
                [Query = [format = "json", per_page = "1000", page = Text.From(page)]]
            )),
            Data = Raw{1}
        in
            Data,

    // Combine all pages of GDP data into one list
    AllPages = List.Combine(List.Transform(PageNumbers, each GetPage(_))),

    // Convert the list of data into a table
    #"Converted to Table" = Table.FromList(AllPages, Splitter.SplitByNothing(), null, null, ExtraValues.Error),

    // Expand and clean the columns
    #"Expanded Column1" = Table.ExpandRecordColumn(#"Converted to Table", "Column1", {
        "indicator", "country", "countryiso3code", "date", "value", "unit", "obs_status", "decimal"
    }),
    #"Expanded Column1.country" = Table.ExpandRecordColumn(#"Expanded Column1", "country", {"id", "value"}, {"Country ID", "Country Name"}),
    #"Expanded Column1.indicator" = Table.ExpandRecordColumn(#"Expanded Column1.country", "indicator", {"id", "value"}, {"Indicator ID", "Indicator Name"}),

    // Remove unnecessary columns
    #"Removed Columns" = Table.RemoveColumns(#"Expanded Column1.indicator", {"Indicator ID", "Indicator Name", "unit", "obs_status", "decimal"}),

    // Rename and clean the columns
    #"Renamed Columns" = Table.RenameColumns(#"Removed Columns", {
        {"countryiso3code", "Country ISO Code"},
        {"date", "Year"},
        {"value", "GDP PPP per Capita"}
    }),
    #"Converted GDP" = Table.TransformColumns(#"Renamed Columns", {
        {"GDP PPP per Capita", each try Number.FromText(Text.From(_)) otherwise null}
    }),

    // Step 4: Filter to keep data from 2020 onwards
    #"Changed Types" = Table.TransformColumnTypes(#"Converted GDP", {
        {"Country ID", type text},
        {"Country Name", type text},
        {"Country ISO Code", type text},
        {"Year", Int64.Type}
    }),

    // Step 5: Clean and merge GDP and GNI data
    CleanGDP = Table.TransformColumns(#"Changed Types", {{"Country ISO Code", Text.Upper, type text}}),
    CleanGNI = Table.TransformColumns(GniTyped, {{"Country ISO Code", Text.Upper, type text}}),

    // Merge GDP and GNI data using "Country ISO Code" and "Year"
    #"Merged GNI per Capita" = Table.NestedJoin(
        CleanGDP,
        {"Country ISO Code", "Year"},
        CleanGNI,
        {"Country ISO Code", "Year"},
        "GNIData",
        JoinKind.LeftOuter
    ),
    #"Expanded GNI per Capita" = Table.ExpandTableColumn(#"Merged GNI per Capita", "GNIData", {"GNI per Capita"}, {"GNI per Capita"})
in
    #"Expanded GNI per Capita"
